[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "whisperengine"
version = "1.0.37"
description = "WhisperEngine - Privacy-first AI conversation and roleplay platform"
authors = [{name = "whisperengine-ai", email = "contact@whisperengine.ai"}]
license = {text = "GPL-3.0-or-later"}
readme = "README.md"
requires-python = ">=3.13"
keywords = ["discord", "bot", "ai", "memory", "privacy", "personality", "whisperengine"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Communications :: Chat",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Core Discord Bot Dependencies
    "discord.py==2.6.3",  # Updated from 2.4.0
    "python-dotenv==1.1.1",  # Updated from 1.0.1
    
    # HTTP Client Dependencies  
    "aiohttp==3.12.15",  # Updated from 3.10.5
    "requests==2.32.5",  # Updated from 2.32.3
    
    # AI/ML and Memory System Dependencies
    "qdrant-client==1.12.0",  # Local vector database (Docker)
    "fastembed>=0.7.0",  # Local embeddings (Python 3.13 compatible)
    "numpy==2.3.3",  # Essential vector operations
    "redis==6.4.0",  # Session cache only (not memory storage)
    
    # Image Processing Dependencies
    "Pillow==11.3.0",  # Updated from 10.4.0
    
    # Async File I/O Dependencies
    "aiofiles==24.1.0",
    
    # Voice functionality dependencies (optional)
    "PyNaCl==1.6.0",  # Updated from 1.5.0
    "audioop-lts==0.2.2",
    "elevenlabs==2.16.0",  # Updated from 1.8.2
]

[project.optional-dependencies]
test = [
    "pytest==8.4.2",  # Updated from 8.3.3
    "pytest-asyncio==1.2.0",  # Updated from 0.24.0
    "pytest-cov==5.0.0",
    "pytest-xdist==3.6.0",
    "pytest-mock==3.12.0",  # Updated from 3.14.0
    "pytest-benchmark==4.0.0",
    "pytest-timeout==2.3.1",
    "pytest-html==4.1.1",
    "coverage[toml]==7.6.0",
    "psutil==7.1.0",  # Updated from 6.0.0 - For performance testing
]
dev = [
    "black==25.1.0",  # Updated from 24.8.0
    "flake8==7.1.1",
    "mypy==1.13.0",  # Updated from 1.11.2
    "pre-commit==3.8.0",
    "debugpy==1.8.6",
    "ipython==8.27.0",
    "jupyter==1.1.1",
    "ruff==0.13.1",  # Updated from 0.6.4
]

[project.urls]
Homepage = "https://github.com/whisperengine-ai/whisperengine"
Repository = "https://github.com/whisperengine-ai/whisperengine.git"
Issues = "https://github.com/whisperengine-ai/whisperengine/issues"

[project.scripts]
whisperengine = "src.main:main"
whisperengine-bot = "src.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.setuptools.package-data]
"src.config" = ["*.md", "*.example"]

[tool.black]
line-length = 100
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | data
  | logs
  | temp_images
  | __pycache__
)/
'''

[tool.ruff]
target-version = "py313"
line-length = 100

[tool.ruff.lint]
select = ["E9", "F63", "F7", "F82"]  # Only syntax errors and undefined names
ignore = []

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config --cov=src --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"
markers = [
    "unit: marks tests as unit tests (fast, no external dependencies)",
    "integration: marks tests as integration tests (may use real services)", 
    "performance: marks tests as performance/benchmark tests",
    "security: marks tests as security validation tests",
    "slow: marks tests as slow running",
    "llm: marks tests that require LLM service integration",
]

[tool.mypy]
python_version = "3.13"
# Gradual adoption mode - lenient settings to start
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false  # Too strict for gradual adoption
disallow_incomplete_defs = false  # Too strict for gradual adoption
check_untyped_defs = true  # Check types even if no annotations
disallow_untyped_decorators = false  # Too strict
no_implicit_optional = false  # Allow Optional[T] = None pattern
warn_redundant_casts = true
warn_unused_ignores = false  # Avoid noise during gradual adoption
warn_no_return = true
warn_unreachable = true
strict_equality = true
# Show error codes to help understand issues
show_error_codes = true
# Exclude deprecated files
exclude = [
    "src/platforms/universal_chat_DEPRECATED.py",
    "src/core/message_processor_fix.py",
]

[[tool.mypy.overrides]]
module = [
    "discord.*",
    "qdrant_client.*",
    "fastembed.*",
    "elevenlabs.*",
    "redis.*",
    "audioop_lts.*",
    "psycopg2.*",
    "influxdb_client.*",
    "transformers.*",
    "torch.*",
]
ignore_missing_imports = true
