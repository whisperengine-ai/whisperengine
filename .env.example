# =======================================================
# Discord Bot Configuration Template
# Copy this to .env and configure for your setup
# =======================================================

# =======================================================
# REQUIRED CONFIGURATION
# =======================================================

# Discord Bot Token (required)
# Get from: https://discord.com/developers/applications
DISCORD_BOT_TOKEN=your_discord_bot_token_here

# AI System Configuration - Always Full Capabilities
# Old IMPLEMENTATION_MODE removed - system always uses full capabilities

# LLM Configuration (required) - Default: LM Studio local
LLM_CHAT_API_URL=http://127.0.0.1:1234/v1
LLM_MODEL_NAME=mistralai/mistral-nemo-instruct-2407
LLM_FACTS_MODEL_NAME=local-model

# Embedding Configuration (optional - for better performance)
# IMPORTANT: macOS Docker containers cannot access GPU - embeddings run on CPU only (slow)
# External embedding API can run on host with GPU/Neural Engine acceleration
# Leave these unset to use ChromaDB default embeddings (slower but works)
# LLM_EMBEDDING_API_URL=https://api.openai.com/v1
# LLM_EMBEDDING_MODEL_NAME=text-embedding-nomic-embed-text-v1.5
# LLM_EMBEDDING_API_KEY=your_embedding_api_key_here

# Local Embedding Configuration (when not using external API)
# Used when external API is not configured - runs inside ChromaDB container
# LLM_LOCAL_EMBEDDING_MODEL=all-Mpnet-BASE-v2

# Alternative Backend Examples (uncomment to use instead of default)
# Local LM Studio: http://host.docker.internal:1234/v1
# Remote OpenRouter: https://openrouter.ai/api/v1 (requires OPENROUTER_API_KEY)

# =======================================================
# DISCORD BOT CONFIGURATION
# =======================================================

# Demo Bot Configuration
# Set to true for demo/testing bots that may have data reviewed by developers
# Demo bots will show warnings about data handling and regular purging
DEMO_BOT=false

# Admin user permissions (comma-separated Discord user IDs)
ADMIN_USER_IDS=

# Bot behavior settings
DISCORD_COMMAND_PREFIX=!
DISCORD_BOT_NAME=                           # Bot's preferred name for selective responding
DISCORD_HEARTBEAT_TIMEOUT=60.0
DISCORD_HEARTBEAT_CHECK_INTERVAL=10.0
DISCORD_CHUNK_GUILDS=false
DISCORD_LLM_TIMEOUT=120                     # Discord-specific timeout

# Health check server for container orchestration
HEALTH_CHECK_PORT=9090                      # Port for Docker health checks and monitoring
HEALTH_CHECK_HOST=0.0.0.0                   # Bind to all interfaces for container access

# =======================================================
# AI INTELLIGENCE PHASES CONFIGURATION
# =======================================================

# AI Intelligence System - Full Capabilities Always Enabled
# Complete integrated AI system with all phases active
# All features: Personality Profiling, Emotional Intelligence, Memory Networks, Human-like Intelligence

# AI Behavior & Style Configuration
AI_MEMORY_OPTIMIZATION=true                 # Advanced memory optimization and retrieval
AI_EMOTIONAL_RESONANCE=true                 # Deep emotional understanding and response
AI_ADAPTIVE_MODE=true                       # Learn and adapt to user preferences
AI_PERSONALITY_ANALYSIS=true                # Comprehensive personality profiling

# =======================================================
# LLM PERFORMANCE TUNING
# =======================================================

# LLM Performance Settings
LLM_TEMPERATURE=0.7                         # Creativity 0.0-2.0
LLM_REQUEST_TIMEOUT=90                      # LM Studio can be slow
LLM_CONNECTION_TIMEOUT=10                   # Connection establishment timeout

# Token Limits - Optimized for large system prompts with emotional intelligence
LLM_MAX_TOKENS_CHAT=4096                   # Main chat response tokens
LLM_MAX_TOKENS_COMPLETION=1024              # Completion tokens
LLM_MAX_TOKENS_EMOTION=200                  # Emotion analysis tokens
LLM_MAX_TOKENS_FACT_EXTRACTION=500          # Fact extraction tokens
LLM_MAX_TOKENS_PERSONAL_INFO=400            # Personal info tokens
LLM_MAX_TOKENS_TRUST_DETECTION=300          # Trust detection tokens
LLM_MAX_TOKENS_USER_FACTS=400               # User facts tokens

# Vision Support (experimental)
LLM_SUPPORTS_VISION=false
LLM_VISION_MAX_IMAGES=5


# Message Security
MAX_SYSTEM_MESSAGE_LENGTH=                  # Auto-calculated
SECURITY_LOG_LEVEL=quiet

# =======================================================
# DATABASE CONFIGURATION
# =======================================================

# PostgreSQL Database Configuration (required)
# For Docker: use service name "postgres"
# For Native: use "localhost" 
POSTGRES_HOST=localhost                     # Use "postgres" for Docker mode
POSTGRES_PORT=5432
POSTGRES_DB=whisper_engine
POSTGRES_USER=bot_user
POSTGRES_PASSWORD=bot_password_change_me

# Connection pool settings
POSTGRES_MIN_CONNECTIONS=5
POSTGRES_MAX_CONNECTIONS=20
POSTGRES_PRIVACY_MIN_CONNECTIONS=3          # Privacy manager pool
POSTGRES_PRIVACY_MAX_CONNECTIONS=10         # Privacy manager pool

# Redis Configuration (required)
# For Docker: use service name "redis"
# For Native: use "localhost"
REDIS_HOST=localhost                        # Use "redis" for Docker mode
REDIS_PORT=6379
REDIS_DB=0
USE_REDIS_CACHE=true

# Redis cache settings
CONVERSATION_CACHE_TIMEOUT_MINUTES=15
CONVERSATION_CACHE_BOOTSTRAP_LIMIT=20
CONVERSATION_CACHE_MAX_LOCAL=50

# ChromaDB Configuration (required)
USE_CHROMADB_HTTP=true
# For Docker: use service name "chromadb"
# For Native: use "localhost"
CHROMADB_HOST=localhost                     # Use "chromadb" for Docker mode
CHROMADB_PORT=8000
CHROMADB_PATH=./chromadb_data
CHROMADB_COLLECTION_NAME=user_memories
CHROMADB_GLOBAL_COLLECTION_NAME=global_facts
ANONYMIZED_TELEMETRY=false

# Neo4j Graph Database (optional)
ENABLE_GRAPH_DATABASE=false
# For Docker: use service name "neo4j"
# For Native: use "localhost"
NEO4J_HOST=localhost                        # Use "neo4j" for Docker mode
NEO4J_PORT=7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=neo4j_password_change_me
NEO4J_DATABASE=neo4j

# Graph features
GRAPH_SYNC_MODE=async                       # Options: async, sync, disabled
FALLBACK_TO_EXISTING=true
EMOTION_GRAPH_SYNC_INTERVAL=10

# =======================================================
# MEMORY SYSTEM CONFIGURATION
# =======================================================

# Memory Features
ENABLE_AUTO_FACTS=true
ENABLE_GLOBAL_FACTS=true
ENABLE_EMOTIONS=true

# Embedding Configuration
USE_EXTERNAL_EMBEDDINGS=false
# Embedding Model Selection
EMBEDDING_MODEL_NAME=text-embedding-nomic-embed-text-v1.5
FALLBACK_EMBEDDING_MODEL=all-mpnet-base-v2
LOAD_FALLBACK_EMBEDDING_MODELS=true

# Embedding Performance
EMBEDDING_BATCH_SIZE=100
EMBEDDING_MAX_RETRIES=3
EMBEDDING_RETRY_DELAY=1.0
EMBEDDING_MAX_CONCURRENT=5

# Backup System
AUTO_BACKUP_ENABLED=true
AUTO_BACKUP_INTERVAL_HOURS=24
BACKUP_RETENTION_COUNT=5
BACKUP_PATH=./backups

# =======================================================
# VOICE FEATURES
# =======================================================

# Voice System
VOICE_SUPPORT_ENABLED=true

# ElevenLabs API
ELEVENLABS_API_KEY=                         # Your ElevenLabs API key
ELEVENLABS_DEFAULT_VOICE_ID=ked1vRAQW5Sk9vhZC3vI # Updated default voice
ELEVENLABS_VOICE_STABILITY=0.5              # 0.0-1.0
ELEVENLABS_VOICE_SIMILARITY_BOOST=0.8       # 0.0-1.0
ELEVENLABS_VOICE_STYLE=0.0                  # 0.0-1.0, most natural
ELEVENLABS_USE_SPEAKER_BOOST=true

# Voice Behavior
VOICE_AUTO_JOIN=false
VOICE_RESPONSE_ENABLED=true
VOICE_LISTENING_ENABLED=true
VOICE_STREAMING_ENABLED=true
VOICE_MAX_RESPONSE_LENGTH=300               # characters
VOICE_MAX_AUDIO_LENGTH=30                   # seconds
VOICE_RESPONSE_DELAY=1.0                    # seconds

# Voice Connection Management
VOICE_JOIN_ANNOUNCEMENTS=true
VOICE_KEEPALIVE_INTERVAL=300                # 5 minutes
VOICE_HEARTBEAT_INTERVAL=30                 # seconds
VOICE_MAX_RECONNECT_ATTEMPTS=3
VOICE_RECONNECT_DELAY=5.0                   # seconds

# =======================================================
# JOB SCHEDULER & AUTOMATION
# =======================================================

# Job Scheduler Configuration
JOB_SCHEDULER_ENABLED=true
JOB_SCHEDULER_CHECK_INTERVAL_SECONDS=30

# Follow-up Message Configuration  
FOLLOW_UP_ENABLED=true
FOLLOW_UP_DEFAULT_DELAY_HOURS=48
FOLLOW_UP_MAX_PER_USER_PER_WEEK=2
FOLLOW_UP_MIN_HOURS_BETWEEN=24

# Data Cleanup Configuration
CLEANUP_ENABLED=true
CLEANUP_OLD_CONVERSATIONS_DAYS=30
CLEANUP_TEMP_FILES_HOURS=24
CLEANUP_FAILED_JOBS_DAYS=7

# =======================================================
# SYSTEM CONFIGURATION
# =======================================================

# Environment and Debugging
ENVIRONMENT=development
DEBUG_MODE=false
LOG_LEVEL=INFO
LOG_DIR=logs
LOG_APP_NAME=discord_bot

# Performance Settings
MAX_PROCESSING_TIME=60.0                    # seconds

# System Prompt File - Customize your AI's personality
# Default: Dream character from The Sandman series
BOT_SYSTEM_PROMPT_FILE=./prompts/default.md

# Choose from pre-built personality templates:
# BOT_SYSTEM_PROMPT_FILE=./prompts/empathetic_companion_template.md    # üíù Supportive friend
# BOT_SYSTEM_PROMPT_FILE=./prompts/professional_ai_template.md        # üëî Business assistant  
# BOT_SYSTEM_PROMPT_FILE=./prompts/casual_friend_template.md          # üòä Casual chat buddy
# BOT_SYSTEM_PROMPT_FILE=./prompts/character_ai_template.md           # üé≠ Roleplay characters
# BOT_SYSTEM_PROMPT_FILE=./prompts/adaptive_ai_template.md            # üß† Self-adapting AI
# BOT_SYSTEM_PROMPT_FILE=./prompts/dream_ai_enhanced.md               # ‚ú® Enhanced Dream character

# Or create your own custom personality file in the prompts directory:
# BOT_SYSTEM_PROMPT_FILE=./prompts/my_custom_personality.md

# File and Image Processing
TEMP_IMAGES_DIR=temp_images

# NLP Configuration (advanced)
NLP_DEPLOYMENT_MODE=native_integrated
NLP_SERVICE_HOST=localhost
NLP_SERVICE_PORT=8080
NLP_TIMEOUT_SECONDS=30
NLP_SPACY_MODEL=en_core_web_lg

# Container Detection (auto-detected)
DOCKER_CONTAINER=                           # Auto-detected by environment
ENV_MODE=                                   # Explicit environment mode override
CONTAINER_MODE=                             # Container mode indicator
DEV_MODE=                                   # Development mode indicator

# External API Keys (for external services)
OPENAI_API_KEY=                             # OpenAI API key
OPENROUTER_API_KEY=                         # OpenRouter API key  
HUGGINGFACE_API_KEY=                        # HuggingFace API key
