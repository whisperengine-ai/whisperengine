# Enhanced logging configuration for Docker environments
# This overrides the default logging settings for production deployments

services:
  discord-bot:
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service,environment"
    environment:
      # Enhanced logging configuration
      - LOG_DIR=/app/logs
      - LOG_APP_NAME=discord_bot
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      # Mount logs directory to persist logs outside container
      - ./logs:/app/logs
      # Optional: Mount to external log aggregation volume
      # - log-volume:/app/logs
    labels:
      - "logging.service=discord-bot"
      - "logging.environment=${ENVIRONMENT:-production}"

  # Optional: Add log aggregation services
  # Uncomment for production log aggregation setup
  
  # loki:
  #   image: grafana/loki:2.9.0
  #   ports:
  #     - "3100:3100"
  #   command: -config.file=/etc/loki/local-config.yaml
  #   volumes:
  #     - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml
  #     - loki-data:/tmp/loki
  #   networks:
  #     - monitoring

  # promtail:
  #   image: grafana/promtail:2.9.0
  #   volumes:
  #     - ./logs:/var/log/app:ro
  #     - ./monitoring/promtail-config.yml:/etc/promtail/config.yml
  #   command: -config.file=/etc/promtail/config.yml
  #   depends_on:
  #     - loki
  #   networks:
  #     - monitoring

  # grafana:
  #   image: grafana/grafana:10.1.0
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #     - ./monitoring/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
  #   depends_on:
  #     - loki
  #   networks:
  #     - monitoring

# volumes:
#   loki-data:
#   grafana-data:
#   log-volume:

# networks:
#   monitoring:
#     driver: bridge
